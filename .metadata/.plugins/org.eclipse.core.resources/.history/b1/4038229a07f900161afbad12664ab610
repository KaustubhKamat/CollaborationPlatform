package com.niit.collaborationPlatform.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

import com.niit.collaborationPlatform.DAO.JobDAO;
import com.niit.collaborationPlatform.model.Job;
import com.niit.collaborationPlatform.model.JobApplied;

@RestController
public class JobController {

	@Autowired
	public Job job;

	@Autowired
	public JobDAO jobDAO;

	@Autowired
	public JobApplied jobApplied;

	@Autowired
	public HttpSession session;

	@GetMapping("/getAllJobs")
	public ResponseEntity<List<Job>> getAllJobs() {
		List<Job> jobs = jobDAO.list();
		if (jobs.isEmpty()) {
			job.setErrorCode("404");
			job.setErrorMessage("No Job is available yet. Please Create a Job");
		}

		else {
			job.setErrorCode("202");
			job.setErrorMessage("Successfully Fetched the job list");
		}

		return new ResponseEntity<List<Job>>(jobs,HttpStatus.OK);
	}

	@GetMapping("getAllOpenJobs")
	public ResponseEntity<List<Job>> getAllOpenJobs()
	{
		String loggedInUserId=(String) session.getAttribute("loggedInUserId");
		
		List<Job> jobs=jobDAO.getJobs(loggedInUserId);
		if(jobs==null)
		{
			job.setErrorCode("404");
			job.setErrorMessage("No Jobs are available of this id");
		}
		
		else
		{
		job.setErrorCode("202");
		job.setErrorMessage("Successfully Fetched the jobs of this id");
		}
		return new ResponseEntity<List<Job>>(jobs, HttpStatus.OK);
		
	}
	
	
	@GetMapping("/getJobById")
	public ResponseEntity<List<Job>> getJobById(@PathVariable("jobID")int id)
	{
		
	}
	
}
