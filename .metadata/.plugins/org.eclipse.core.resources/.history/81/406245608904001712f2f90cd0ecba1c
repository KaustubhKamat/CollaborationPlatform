app.controller('BlogController', [ 'BlogServices', '$http', '$rootscope',
		'$location', '$scope',
		function(BlogServices, $http, $rootscope, $location, $scope) {

			$scope.message = "Message from Blog Controller"
			console.log("Starting-->BlogController")

			var self = this;
			self.blog = {
				id : '',
				title : '',
				emailId :'',
			    description : '',
				date_time : '',
				status :'',
				reason : ''			
			}

			self.blogs = [];
			
			
			var currentUser=$rootscope.currentUser;
			
			self.fetchAllBlogs=function(){
	        	console.log("BlogController-->Starting fetchAllBlogs function")
	        
	        	BlogServices.fetchAllJobs().then
	        	(
	        	function(Response)
	        	{
	        		console.log("jobController-->Ending fetchAllJobs function")
	        		self.jobs=Response;
	        	},
	        	function(errResponse)
	        	{
	        		console.log("jobController-->Ending fetchAllJobs function")
	        		console.log("jobController-->The jobs are not fetched successfully")
	        	}
	        	)
			
			},
			
			self.fetchAllOpenJobs=function(){
	        	console.log("jobController-->Starting fetchAllOpenJobs function")
	        
	        	JobServices.fetchAllOpenJobs().then
	        	(
	        	function(d)
	        	{
	        		console.log("jobController-->Ending fetchAllOpenJobs function")
	        		self.jobs=d;
	        	},
	        	function(errResponse)
	        	{
	        		console.log("jobController-->Ending fetchAllOpenJobs function")
	        		console.log("jobController-->The open jobs are not fetched successfully")
	        	}
	        	)
			
			},
			
			self.jobById=function(){
	        	console.log("jobController-->Starting jobById function")
	        
	        	JobServices.jobById(id).then
	        	(
	        	function(d)
	        	{
	        		console.log("jobController-->Ending jobById function")
	        		self.jobs=d;
	        	},
	        	function(errResponse)
	        	{
	        		console.log("jobController-->Ending jobById function")
	        		console.log("jobController-->The job with id is not fetched successfully")
	        	}
	        	)
			
			},
			
			
			self.createNewJob=function(){
				console.log("jobController-->Starting CreateNewJob function")
				
				JobServices.createNewJob(job).then(
				function(d)
				{
					console.log("jobController-->Ending CreateNewJob function")
					alert("The Job is posted successfully")
				},
				
				function(errResponse)
				{
					console.log("jobController ==> Ending createNewJob function()")

					console.log("Error while posting job,, please try again after sometime")
				}
				)
				
			},
			
			self.submit =function()
			{
				console.log("jobController ==> Starting submit function()")

				self.createNewJob(self.job);
				self.reset();
				console.log("jobController ==> Ending submit function()")

		};
			
			self.updateJob=function(){
				console.log("jobController-->Starting UpdateJob function")
				
				JobServices.updateJob(job).then(
				function(d)
				{
					console.log("jobController-->Ending updateJob function")
					alert("The Job is updated successfully with id " +id)
				},
				
				function(errResponse)
				{
					console.log("jobController ==> Ending updateJob function()")

					console.log("Error while updating job,, please try again after sometime")
				}
				)
				
			};

		} ])/**
 * 
 */