package com.niit.collaborationPlatform.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.hibernate.annotations.common.util.impl.LoggerFactory;
import org.omg.CORBA.FREE_MEM;
import org.slf4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.niit.collaborationPlatform.DAO.FriendDAO;
import com.niit.collaborationPlatform.DAO.UserDAO;
import com.niit.collaborationPlatform.model.Friend;

public class FriendController {

	@Autowired
	public Friend friend;

	@Autowired
	public FriendDAO friendDAO;

	@Autowired
	public UserDAO userDAO;

	@Autowired
	public HttpSession httpSession;

	public static Logger log = org.slf4j.LoggerFactory.getLogger(FriendController.class);

	
	@RequestMapping(value="/getMyFriendRequests", method=RequestMethod.GET)
	public ResponseEntity<List<Friend>> getFriendRequests(HttpSession session) {
		log.debug("FriendController==> Starting getFriendRequests Method");
		String loggedInUserId = (String) session.getAttribute("loggedInUserId");

		List<Friend> friendRequest = new ArrayList<Friend>();
		if (loggedInUserId == null) {
			friend.setErrorCode("404");
			friend.setErrorMessage("Please Login to Continue");
			friendRequest.add(friend);
			log.debug("FriendController==> Ending getFriendRequests Method");
		}
		log.debug("FriendController ====> Searching friends for " + loggedInUserId);
		friendRequest = friendDAO.getMyFriendRequests(loggedInUserId);

		if (friendRequest.isEmpty()) {
			friend.setErrorCode("404");
			friend.setErrorMessage("Currently no friend requests are available");
			friendRequest.add(friend);
			log.debug("FriendController==> Ending getFriendRequests Method");
		}
		return new ResponseEntity<List<Friend>>(friendRequest, HttpStatus.OK);

	}
	
	public ResponseEntity<List<Friend>> getSentFriendRequests(HttpSession session)
	{
		log.debug("FriendController==> Starting getSentFriendRequests Method");
	}
	

}
